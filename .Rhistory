shiny::runApp()
runApp()
runApp()
q()
shiny::runApp()
q()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
q()
724809/91605
shiny::runApp()
q()
445*3.281
1200/3.281
1083/3.281
shiny::runApp()
shiny::runApp()
runApp()
runApp()
cow <- "moo"
moo =="[NONE]"
cow
cow=="[NONE]"
cow=="moo"
cow!="[NONE]"
runApp()
runApp()
runApp()
?updateSelectInput
runApp()
runApp()
runApp()
?plotOutput
runApp()
install.packages("plot3Drgl")
runApp()
?scatter2D
runApp()
?uiSidebar
?sidebarLayout
runApp()
runApp()
x <- rnorm(100)
y <_ rnorm(100)
y <- rnorm(100)
xy <- rbind(x,y)
moo <- as.matrix(dist(xy))
dim(moo)
help(idst)
help(dist)
xy <- cbind(x,y)
moo <- as.matrix(dist(xy))
dim(moo)
apply(moo,1,min)
?numericInput
library(gstat)
runApp()
?observeEvent
?updateNumericInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
nndist <- function(xy) {
nd <- nrow(xy)
nnd <- rep(0,nd)
for (i in 1:nd) {
dst <- sqrt((xy[,1]-xy[i,1])^2+(xy[,2]-xy[i,2])^2)
nnd[i] <- min(dst[dst>0])
}
}
source('C:/gcb/Shinygram/nndist.R', echo=TRUE)
runApp()
runApp()
ZoneA <- read.csv("ZoneA.csv")
names(ZoneA)
moo <- nndist(ZoneA[,1:2])
moo
nndist
source('C:/gcb/Shinygram/nndist.R', echo=TRUE)
runApp()
runApp()
library(gstat)
library(sp)
runApp()
help("na.omit")
dim(na.omit(ZoneA))
na.omit(ZoneA)
dim(ZoneA)
class(na.omit(ZoneA))
runApp()
runApp()
save.image()
q()
